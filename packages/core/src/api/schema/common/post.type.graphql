"内容"
type Post implements Node {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
#    languageCode: LanguageCode!
    deletedAt: DateTime
    "文章标题"
    title: String
    "文章标识"
    slug: String!
    "文章描述"
    description: String!
    "内容类型"
    type: PostType!
    "作者"
    creator: User
    "分类"
    terms: [Term!]
    "内容特色图片"
    featured: Asset
    "内容中相关资产"
    assets: [Asset]
    "作品内容"
    content: JSON!
    "作品发布状态"
    state: PostState
    "是否允许评论"
    allowComment: Boolean
    "评论数"
    commentCount: Int
    "排序"
    order: Int
    "父内容"
    parent: ID
    setting: PostSetting
    "Post 元数据"
    meta: PostMeta
}

"内容列表"
type PostList implements PaginatedList {
    items: [Post!]!
    totalItems: Int!
}



"作品的价格配置"
type DiffPriceOption {
    "版本名称"
    versionName: String
    "价格"
    price: Float!
    "说明信息"
    info: String
}

"作品的保护机制配置"
type ProtectOption {
    type: String!
    method: String
}

type ProductOption {
    "作品定价"
    price: Float!
    "作品差异化定价"
    diffPrice: [DiffPriceOption]
    "订阅周期"
    subscription: ProductSubscriptionPeriod
    "作品保护配置"
    protect: [ProtectOption]
}

"内容格式类型"
type ContentOption {
    type: ContentParserType
}

"导航菜单项"
type NavMenuItemOption {
    "菜单类型"
    objectType: MenuObjectType!
    "菜单对象ID"
    objectId: ID
    "菜单URL 或 slug"
    url: String
}

type PageOption {
    template: String!
}

type PostSetting {
    content: ContentOption
    menu: NavMenuItemOption
    product: ProductOption
    page: PageOption
}

type PostMeta {
#    "菜单项"
#    menuItem: NavMenuItem
#    "产品配置"
#    productSetting: ProductSetting
#    "内容解析类型"
#    parser: ContentParser
    key: String!
    value: String
    detail: String
}
